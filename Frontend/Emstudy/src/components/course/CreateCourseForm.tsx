import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { CheckCircle } from "lucide-react";
import { useCourses } from "../../context/CourseContext";
import { useAuth } from "../../context/AuthContext";
import { Course, Teacher } from "../../types";
import Button from "../ui/Button";
import Input from "../ui/Input";
import TextArea from "../ui/TextArea";

const CreateCourseForm: React.FC = () => {
  const [name, setName] = useState("");
  const [description, setDescription] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState("");

  const { createCourse } = useCourses();
  const { currentUser } = useAuth();
  const navigate = useNavigate();

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError("");

    if (!currentUser || currentUser.role !== "Teacher") {
      setError("Only teachers can create courses");
      return;
    }

    setIsLoading(true);

    try {
      // Create a basic course object
      const newCourse: Course = {
        courseId: 0, // Will be set by the server
        name,
        description,
        joinCode: null, // Will be generated by the server
        creationDate: new Date().toISOString(),
        teacher: {
          userId: currentUser.userId || 0,
          username: currentUser.sub,
          email: currentUser.email,
          role: "Teacher",
        } as Teacher,
        courseItems: [],
        enrollments: [],
      };

      await createCourse(newCourse);
      navigate("/courses");
    } catch (err) {
      setError("Failed to create course. Please try again.");
      console.error(err);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="max-w-2xl mx-auto bg-white shadow-md rounded-lg p-6">
      <h2 className="text-xl font-bold mb-6">Create a New Course</h2>

      {error && (
        <div
          className="bg-red-50 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4"
          role="alert"
        >
          <span className="block sm:inline">{error}</span>
        </div>
      )}

      <form onSubmit={handleSubmit} className="space-y-6">
        <div className="grid grid-cols-1 gap-6">
          <div>
            <Input
              label="Course Name"
              id="name"
              type="text"
              value={name}
              onChange={(e) => setName(e.target.value)}
              required
              fullWidth
              placeholder="e.g. Introduction to Computer Science"
            />
          </div>

          <div>
            <TextArea
              label="Course Description"
              id="description"
              value={description}
              onChange={(e) => setDescription(e.target.value)}
              required
              fullWidth
              placeholder="Provide a detailed description of the course"
              rows={4}
            />
          </div>

          <div className="bg-blue-50 p-4 rounded-md text-sm text-blue-800">
            <p className="mb-2 font-medium">Important Notes:</p>
            <ul className="list-disc list-inside space-y-1">
              <li>
                A unique join code will be automatically generated for your
                course.
              </li>
              <li>
                You can share this join code with students to allow them to
                enroll.
              </li>
              <li>
                After creating the course, you can add materials and quizzes.
              </li>
            </ul>
          </div>
        </div>

        <div className="flex justify-end space-x-4">
          <Button
            type="button"
            variant="outline"
            onClick={() => navigate("/courses")}
          >
            Cancel
          </Button>
          <Button
            type="submit"
            variant="primary"
            isLoading={isLoading}
            icon={<CheckCircle size={18} />}
          >
            Create Course
          </Button>
        </div>
      </form>
    </div>
  );
};

export default CreateCourseForm;
