name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-backend:
    name: Build & Test Backend
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: appdb
          MYSQL_USER: user
          MYSQL_PASSWORD: pass
          MYSQL_ROOT_PASSWORD: rootpass
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -prootpass --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Wait for MySQL to be ready
        run: |
          n=0
          until mysqladmin ping -h localhost -u root -prootpass --silent; do
            n=$((n+1))
            if [ $n -gt 30 ]; then
              echo "MySQL never became healthy" >&2
              exit 1
            fi
            echo "Waiting for MySQLâ€¦ ($n/30)"
            sleep 2
          done

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Cache Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

      - name: Build & Test
        env:
          DB_HOST: localhost
          DB_PORT: 3307
          DB_NAME: appdb
          DB_USERNAME: user
          DB_PASSWORD: pass
        run: |
          cd Backend/EMSTUDY
          mvn -B clean verify

  build-frontend:
    name: Build & Test Frontend
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: Frontend/Emstudy/package-lock.json

      - name: Install dependencies
        working-directory: Frontend/Emstudy
        run: npm ci

      - name: Lint
        working-directory: Frontend/Emstudy
        run: npm run lint

      - name: Run unit tests
        working-directory: Frontend/Emstudy
        run: npm test -- --watchAll=false

      - name: Build React app
        working-directory: Frontend/Emstudy
        run: npm run build
